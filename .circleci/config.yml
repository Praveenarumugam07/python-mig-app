version: 2.1

executors:
  custom-gcloud:
    docker:
      - image: google/cloud-sdk:slim

jobs:
  deploy-to-mig:
    executor: custom-gcloud
    steps:
      - checkout

      - run:
          name: ‚úÖ Validate required environment variables
          command: |
            REQUIRED_VARS=("GCP_SA_KEY_B64" "GCP_PROJECT_ID" "GCP_REGION" "GCP_ZONE")
            for i in "${REQUIRED_VARS[@]}"; do
              if [[ -z "${!i}" ]]; then
                echo "‚ùå ERROR: Missing env var $i"
                exit 1
              else
                echo "‚úÖ $i is set"
              fi
            done

      - run:
          name: üîê Authenticate with GCP
          command: |
            echo "$GCP_SA_KEY_B64" | base64 -d > gcloud-key.json
            gcloud auth activate-service-account --key-file=gcloud-key.json
            gcloud config set project "$GCP_PROJECT_ID"

      - run:
          name: üèóÔ∏è Create startup script file
          command: |
            cat <<'EOF' > startup-script.sh
            #!/bin/bash
            apt-get update
            apt-get install -y python3-pip git

            git clone https://github.com/<your-username>/python-mig-app.git /opt/app

            cd /opt/app
            pip3 install -r requirements.txt

            nohup python3 app.py &
            EOF

      - run:
          name: ‚öôÔ∏è Create Instance Template
          command: |
            gcloud compute instance-templates create python-app-template \
              --machine-type=e2-micro \
              --metadata-from-file startup-script=startup-script.sh \
              --tags=http-server \
              --region=$GCP_REGION

      - run:
          name: ‚öôÔ∏è Create Managed Instance Group (MIG)
          command: |
            gcloud compute instance-groups managed create python-app-mig \
              --base-instance-name=python-app \
              --template=python-app-template \
              --size=1 \
              --zone=$GCP_ZONE

      - run:
          name: ‚úÖ Verify instances created in MIG
          command: |
            gcloud compute instance-groups managed list-instances python-app-mig \
              --zone=$GCP_ZONE

workflows:
  version: 2
  deploy-workflow:
    jobs:
      - deploy-to-mig
